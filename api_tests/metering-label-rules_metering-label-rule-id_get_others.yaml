# ********RoostGPT********
# Test generated by RoostGPT for test metering-csv using AI Type Vertex AI and AI Model code-bison-32k

# Test generated for /v2.0/metering/metering-label-rules/{metering-label-rule-id}_get for http method type GET in artillery framework
# RoostTestHash=987f45854d



# ********RoostGPT********
config:
  target: {{ $processEnvironment.API_HOST }}
  expect: true
  payload:
    file: metering-label-rules_metering-label-rule-id_get_others.csv
    skipHeader: true

scenarios:
  - scenario: Failure-inducing API Requests
    flow:
      # Invalid URL
      - get:
          url: "{{ config.target }}/v2.0/metering/metering-label-rules/invalid-id"
          expect:
            statusCode: 404
          comment: Expecting a 404 response for an invalid URL.

      # Missing required query parameter
      - get:
          url: "{{ config.target }}/v2.0/metering/metering-label-rules"
          expect:
            statusCode: 400
          comment: Expecting a 400 response for missing required query parameter.

      # Invalid JSON payload
      - post:
          url: "{{ config.target }}/v2.0/metering/metering-label-rules"
          payload:
            invalid_json: "{"
          expect:
            statusCode: 400
          comment: Expecting a 400 response for invalid JSON payload.

      # Non-existent metering-label-rule-id
      - get:
          url: "{{ config.target }}/v2.0/metering/metering-label-rules/non-existent-id"
          expect:
            statusCode: 404
          comment: Expecting a 404 response for non-existent metering-label-rule-id.

      # Invalid authorization token
      - get:
          url: "{{ config.target }}/v2.0/metering/metering-label-rules/{{ $csv.metering-label-rule-id }}"
          headers:
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}_invalid
          expect:
            statusCode: 401
          comment: Expecting a 401 response for invalid authorization token.

      # Think time of 2 seconds between requests
      - think: 2000
