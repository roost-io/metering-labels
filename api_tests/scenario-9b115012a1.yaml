# ********RoostGPT********
# Test generated by RoostGPT for test metering-integration using AI Type Azure Open AI and AI Model roost-gpt4-32k
# 
# 
# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}/v2.0/metering/metering-labels"
  phases:
    - duration: 20
      arrivalRate: 1
  payload:
    path: "scenario-9b115012a1.csv"
    fields:
      - "id"
      - "tenant_id"
      - "description"
      - "name"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "Create Metering Label"
    # This scenario sends a POST request to create a metering label
    # and expects a 201 status code and the correct properties in return
    flow:
      - post:
          url: "/"
          json:
            id: "{{ id }}"
            tenant_id: "{{ tenant_id }}"
            description: "{{ description }}"
            name: "{{ name }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          expect:
            # Expecting that the status code is 201
            - statusCode: 201
            # Expecting that response has 'id' property
            - hasProperty: "id"
            # Expecting that response has 'tenant_id' property
            - hasProperty: "tenant_id"
            # Expecting that response has 'description' property
            - hasProperty: "description"
            # Expecting that response has 'name' property
            - hasProperty: "name"
            # Expecting that the 'id', 'tenant_id', 'description', and 'name' field are equal to the provided values
            - equals: 
                id: "{{ id }}"
                tenant_id: "{{ tenant_id }}"
                description: "{{ description }}"
                name: "{{ name }}"
      # Wait for 1 second before the next arrival
      - think: 1
