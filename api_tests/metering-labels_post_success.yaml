# ********RoostGPT********
# Test generated by RoostGPT for test metering-csv using AI Type Vertex AI and AI Model code-bison-32k

# Test generated for /v2.0/metering/metering-labels_post for http method type POST in artillery framework
# RoostTestHash=b9a8e69447



# ********RoostGPT********
---
# Artillery script for Metering Labels API - Create Metering Label

config:
  target: {{ $processEnvironment.API_HOST }}
  expect:
    enabled: true
    verbose: false
  # Enable the 'expect' plugin

payload:
  # Retrieve payload variables from CSV file
  file: metering-labels_post_success.csv
  skipHeader: true

variables:
  # Declare variables for dynamic payload values
  tenant_id: {{ metering_label_post_success.tenant_id }}
  description: {{ metering_label_post_success.description }}
  name: {{ metering_label_post_success.name }}

scenarios:
  - flow:
      - get:
          # Get all metering labels
          url: /v2.0/metering/metering-labels
          # Assert response status code
          expect:
            statusCode: 200
            # Assert response headers
            hasHeader: Content-Type
            headerEquals: application/json
            # Assert response body
            hasProperty: metering_labels
            hasProperty: metering_labels[0].id
            hasProperty: metering_labels[0].tenant_id
            hasProperty: metering_labels[0].description
            hasProperty: metering_labels[0].name
      - post:
          # Create a metering label with valid payload
          url: /v2.0/metering/metering-labels
          method: post
          headers:
            Content-Type: application/json
            # Authorization header (if required)
            # {{if notEmpty(SECURITY_SCHEMA) and SECURITY_SCHEMA.in == 'header' and notEmpty(SECURITY_SCHEMA.name)}}
            {{ SECURITY_SCHEMA.name }}: {{$processEnvironment.AUTH_TOKEN}}
            # {{endif}}
          payload:
            tenant_id: ${tenant_id}
            description: ${description}
            name: ${name}
          # Assert response status code
          expect:
            statusCode: 201
            # Assert response headers
            hasHeader: Content-Type
            headerEquals: application/json
            # Assert response body
            hasProperty: metering_label
            hasProperty: metering_label.id
            hasProperty: metering_label.tenant_id
            hasProperty: metering_label.description
            hasProperty: metering_label.name
            equals:
              metering_label.tenant_id: ${tenant_id}
              metering_label.description: ${description}
              metering_label.name: ${name}
      - think: 500 # 500ms think time between requests
