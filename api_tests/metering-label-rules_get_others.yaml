# ********RoostGPT********
# Test generated by RoostGPT for test metering-csv using AI Type Vertex AI and AI Model code-bison-32k

# Test generated for /v2.0/metering/metering-label-rules_get for http method type GET in artillery framework
# RoostTestHash=67255cbbcd



# ********RoostGPT********
# Artillery YAML Test Script for Non-Success API Responses

---
title: Non-Success API Responses Test Scenario
description: This Artillery test script focuses on testing various non-successful API requests, addressing failure cases, edge cases, and error handling.

config:
  target: {{ $processEnvironment.API_HOST }} # Target URL from environment variable
  expect: true # Enable 'expect' plugin

scenarios:
  # Scenario: Non-Success API Responses
  - flow:
      # Request 1: Invalid URL
      # Comment: Testing an invalid URL scenario
      - get:
          url: /invalid-url # Incorrect URL
          expect:
            statusCode: 404 # Expect a 404 Not Found status code

      # Request 2: Missing Authentication
      # Comment: Testing a request without authentication
      - get:
          url: /v2.0/metering/metering-label-rules
          expect:
            statusCode: 401 # Expect a 401 Unauthorized status code

      # Request 3: Invalid Authentication
      # Comment: Testing a request with invalid authentication
      - get:
          url: /v2.0/metering/metering-label-rules
          headers:
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}invalid # Invalid token
          expect:
            statusCode: 401 # Expect a 401 Unauthorized status code

      # Request 4: Invalid Payload
      # Comment: Testing a request with an invalid payload
      - post:
          url: /v2.0/metering/metering-label-rules
          headers:
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
          payload:
            invalidField: invalidValue # Invalid payload field
          expect:
            statusCode: 400 # Expect a 400 Bad Request status code

      # Request 5: Non-Existent Resource
      # Comment: Testing a request for a non-existent resource
      - get:
          url: /v2.0/metering/metering-label-rules/non-existent-id
          headers:
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
          expect:
            statusCode: 404 # Expect a 404 Not Found status code

      # Request 6: Forbidden Access
      # Comment: Testing a request for a resource without proper permissions
      - get:
          url: /v2.0/metering/metering-label-rules/forbidden-id
          headers:
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
          expect:
            statusCode: 403 # Expect a 403 Forbidden status code

      # Request 7: Internal Server Error
      # Comment: Testing a scenario where the server encounters an internal error
      - get:
          url: /v2.0/metering/metering-label-rules/internal-error-id
          headers:
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
          expect:
            statusCode: 500 # Expect a 500 Internal Server Error status code

      # Think time between requests
      - think: 500 # 500ms think time between requests
