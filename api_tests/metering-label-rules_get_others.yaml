# ********RoostGPT********
# Test generated by RoostGPT for test metering-csv using AI Type Vertex AI and AI Model code-bison-32k

# Test generated for /v2.0/metering/metering-label-rules_get for http method type GET in artillery framework
# RoostTestHash=67255cbbcd



# ********RoostGPT********
# Artillery YAML Test Script for Non-Success API Responses

config:
  target: {{ $processEnvironment.API_HOST }}
  expect: true

scenarios:
  - scenario: Failure-Inducing Requests
    # GET - Invalid URL
    - get:
        url: /v2.0/metering/metering-label-rules/invalid-url
        comment: Expecting 404 Not Found for invalid URL
        expect:
          statusCode: 404

    # POST - Invalid Payload
    - post:
        url: /v2.0/metering/metering-label-rules
        comment: Expecting 400 Bad Request for invalid payload
        payload:
          "invalid-field": "invalid-value"
        expect:
          statusCode: 400

    # PATCH - Missing Authorization
    - patch:
        url: /v2.0/metering/metering-label-rules/{{ payload.metering_label_rule_id }}
        comment: Expecting 401 Unauthorized for missing authorization
        payload:
          name: "{{ payload.name }}"
        expect:
          statusCode: 401

    # DELETE - Non-Existent ID
    - delete:
        url: /v2.0/metering/metering-label-rules/99999999999999999999999999999999
        comment: Expecting 404 Not Found for non-existent ID
        expect:
          statusCode: 404

    # GET - Invalid Authorization
    - get:
        url: /v2.0/metering/metering-label-rules
        comment: Expecting 401 Unauthorized for invalid authorization
        headers:
          Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}-invalid
        expect:
          statusCode: 401

    # POST - Invalid Content-Type
    - post:
        url: /v2.0/metering/metering-label-rules
        comment: Expecting 415 Unsupported Media Type for invalid Content-Type
        headers:
          Content-Type: text/plain
        payload:
          name: "{{ payload.name }}"
        expect:
          statusCode: 415

    # GET - Missing Query Parameter
    - get:
        url: /v2.0/metering/metering-label-rules?tenantId=
        comment: Expecting 400 Bad Request for missing query parameter
        expect:
          statusCode: 400

    # POST - Incorrect URL
    - post:
        url: /incorrect/url
        comment: Expecting 404 Not Found for incorrect URL
        payload:
          name: "{{ payload.name }}"
        expect:
          statusCode: 404

    # GET - Empty JSON Payload
    - get:
        url: /v2.0/metering/metering-label-rules
        comment: Expecting 400 Bad Request for empty JSON payload
        payload:
          {}
        expect:
          statusCode: 400

    # GET - Incorrect Query Parameter Value
    - get:
        url: /v2.0/metering/metering-label-rules?tenantId=invalid-tenant-id
        comment: Expecting 400 Bad Request for incorrect query parameter value
        expect:
          statusCode: 400

    # POST - Missing Required Field
    - post:
        url: /v2.0/metering/metering-label-rules
        comment: Expecting 400 Bad Request for missing required field
        payload:
          {}
        expect:
          statusCode: 400

    # GET - Non-Existent Tenant ID
    - get:
        url: /v2.0/metering/metering-label-rules?tenantId=99999999999999999999999999999999
        comment: Expecting 404 Not Found for non-existent tenant ID
        expect:
          statusCode: 404

    # DELETE - Incorrect URL
    - delete:
        url: /incorrect/url
        comment: Expecting 404 Not Found for incorrect URL
        expect:
          statusCode: 404

    # POST - Incorrect Content-Type
    - post:
        url: /v2.0/metering/metering-label-rules
        comment: Expecting 415 Unsupported Media Type for incorrect Content-Type
        headers:
          Content-Type: application/octet-stream
        payload:
          name: "{{ payload.name }}"
        expect:
          statusCode: 415

    # PATCH - Incorrect URL
    - patch:
        url: /incorrect/url
        comment: Expecting 404 Not Found for incorrect URL
        payload:
          name: "{{ payload.name }}"
        expect:
          statusCode: 404

    # GET - Incorrect Tenant ID
    - get:
        url: /v2.0/metering/metering-label-rules?tenantId=invalid-tenant-id
        comment: Expecting 404 Not Found for incorrect tenant ID
        expect:
          statusCode: 404

    # POST - Incorrect URL
    - post:
        url: /incorrect/url
        comment: Expecting 404 Not Found for incorrect URL
        payload:
          name: "{{ payload.name }}"
        expect:
          statusCode: 404

    # GET - Missing Authorization
    - get:
        url: /v2.0/metering/metering-label-rules
        comment: Expecting 401 Unauthorized for missing authorization
        expect:
          statusCode: 401

    # POST - Incorrect URL
    - post:
        url: /incorrect/url
        comment: Expecting 404 Not Found for incorrect URL
        payload:
          name: "{{ payload.name }}"
        expect:
          statusCode: 404

    # PATCH - Missing Required Field
    - patch:
        url: /v2.0/metering/metering-label-rules/{{ payload.metering_label_rule_id }}
        comment: Expecting 400 Bad Request for missing required field
        payload:
          {}
        expect:
          statusCode: 400

    # DELETE - Incorrect URL
    - delete:
        url: /incorrect/url
        comment: Expecting 404 Not Found for incorrect URL
        expect:
          statusCode: 404

    # POST - Incorrect URL
    - post:
        url: /incorrect/url
        comment: Expecting 404 Not Found for incorrect URL
        payload:
          name: "{{ payload.name }}"
        expect:
          statusCode: 404

    # GET - Incorrect URL
    - get:
        url: /incorrect/url
        comment: Expecting 404 Not Found for incorrect URL
        expect:
          statusCode: 404

    # POST - Incorrect URL
    - post:
        url: /incorrect/url
        comment: Expecting 404 Not Found for incorrect URL
        payload:
          name: "{{ payload.name }}"
        expect:
          statusCode: 404

    # GET - Incorrect URL
    - get:
        url: /incorrect/url
        comment: Expecting 404 Not Found for incorrect URL
        expect:
          statusCode: 404

    # POST - Incorrect URL
    - post:
        url: /incorrect/url
        comment: Expecting 404 Not Found for incorrect URL
        payload:
          name: "{{ payload.name }}"
        expect:
          statusCode: 404

payload:
  file: metering-label-rules_get_others.csv
  skipHeader: true
