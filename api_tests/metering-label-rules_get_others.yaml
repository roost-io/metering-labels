# ********RoostGPT********
# Test generated by RoostGPT for test metering-csv using AI Type Vertex AI and AI Model code-bison-32k

# Test generated for /v2.0/metering/metering-label-rules_get for http method type GET in artillery framework
# RoostTestHash=67255cbbcd



# ********RoostGPT********
# Artillery YAML Test Script for Non-Success API Responses

---
title: "Metering Label Rules - Non-Success API Responses"
config:
  target: {{ $processEnvironment.API_HOST }}
  expect: true
  payload:
    file: metering-label-rules_get_others.csv
    skipHeader: true
  variables:
    validRuleId: {{ $processEnvironment.VALID_RULE_ID }}
    validRuleId2: {{ $processEnvironment.VALID_RULE_ID_2 }}
    validRuleId3: {{ $processEnvironment.VALID_RULE_ID_3 }}
    invalidRuleId: {{ $processEnvironment.INVALID_RULE_ID }}
    validTenantId: {{ $processEnvironment.VALID_TENANT_ID }}
    invalidTenantId: {{ $processEnvironment.INVALID_TENANT_ID }}
    validAuth: {{ $processEnvironment.AUTH_TOKEN }}
scenarios:
  - scenario: "Non-Success API Responses"
    flow:
      - get:
          # Test 1: Invalid URL
          title: "Test: Invalid URL"
          url: "/v2.0/metering/metering-label-rules/invalid-url"
          expect:
            statusCode: 404
      - get:
          # Test 2: Missing Authorization
          title: "Test: Missing Authorization"
          url: "/v2.0/metering/metering-label-rules"
          expect:
            statusCode: 401
      - get:
          # Test 3: Invalid Authorization
          title: "Test: Invalid Authorization"
          url: "/v2.0/metering/metering-label-rules"
          headers:
            Authorization: Bearer invalid-token
          expect:
            statusCode: 401
      - get:
          # Test 4: Invalid Tenant ID
          title: "Test: Invalid Tenant ID"
          url: "/v2.0/metering/metering-label-rules?tenantId={{ invalidTenantId }}"
          headers:
            Authorization: Bearer {{ validAuth }}
          expect:
            statusCode: 404
      - get:
          # Test 5: Invalid Rule ID
          title: "Test: Invalid Rule ID"
          url: "/v2.0/metering/metering-label-rules/{{ invalidRuleId }}"
          headers:
            Authorization: Bearer {{ validAuth }}
          expect:
            statusCode: 404
      - get:
          # Test 6: Non-existent Rule ID
          title: "Test: Non-existent Rule ID"
          url: "/v2.0/metering/metering-label-rules/{{ validRuleId2 }}"
          headers:
            Authorization: Bearer {{ validAuth }}
          expect:
            statusCode: 404
      - get:
          # Test 7: Null Rule ID
          title: "Test: Null Rule ID"
          url: "/v2.0/metering/metering-label-rules/{{ null }}"
          headers:
            Authorization: Bearer {{ validAuth }}
          expect:
            statusCode: 404
      - get:
          # Test 8: Missing Rule ID
          title: "Test: Missing Rule ID"
          url: "/v2.0/metering/metering-label-rules/"
          headers:
            Authorization: Bearer {{ validAuth }}
          expect:
            statusCode: 404
      - think: 500
