# ********RoostGPT********
# Test generated by RoostGPT for test metering-csv using AI Type Vertex AI and AI Model code-bison-32k

# Test generated for /v2.0/metering/metering-label-rules_post for http method type POST in artillery framework
# RoostTestHash=067b623f58



# ********RoostGPT********
---
title: Artillery Test Script - Non-Success API Responses
config:
  target: {{ $processEnvironment.API_HOST }}
  expect: enabled
payload:
  csv: metering-label-rules_post_others.csv
  skipHeader: true

scenarios:
  - scenario: Non-Success API Response Scenarios
    flow:
      - get:
          description: |
            Send a GET request to an incorrect URL to test invalid URL handling.
          url: https://incorrect-url.example.com/v2.0/metering/metering-label-rules
          expect:
            - notStatusCode: 200
          think: 500
      - post:
          description: |
            Send a POST request with an invalid payload to test payload validation.
          url: /v2.0/metering/metering-label-rules
          headers:
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
          payload:
            invalidField: invalidValue
          expect:
            - notStatusCode: 201
            - hasHeader: Content-Type
            - headerEquals: application/json
            - hasProperty: error
            - hasProperty: message
          think: 500
      - post:
          description: |
            Send a POST request without the required "name" field in the payload.
          url: /v2.0/metering/metering-label-rules
          headers:
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
          payload:
            description: This is a description.
          expect:
            - notStatusCode: 201
            - hasHeader: Content-Type
            - headerEquals: application/json
            - hasProperty: error
            - hasProperty: message
            - hasProperty: errors
            - hasProperty: errors.name
          think: 500
      - post:
          description: |
            Send a POST request with an invalid "name" field in the payload.
          url: /v2.0/metering/metering-label-rules
          headers:
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
          payload:
            name: invalidName
            description: This is a description.
          expect:
            - notStatusCode: 201
            - hasHeader: Content-Type
            - headerEquals: application/json
            - hasProperty: error
            - hasProperty: message
            - hasProperty: errors
            - hasProperty: errors.name
          think: 500
      - post:
          description: |
            Send a POST request with an invalid "description" field in the payload.
          url: /v2.0/metering/metering-label-rules
          headers:
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
          payload:
            name: validName
            description: This is an invalid description.
          expect:
            - notStatusCode: 201
            - hasHeader: Content-Type
            - headerEquals: application/json
            - hasProperty: error
            - hasProperty: message
            - hasProperty: errors
            - hasProperty: errors.description
          think: 500
      - post:
          description: |
            Send a POST request with an invalid "labelKey" field in the payload.
          url: /v2.0/metering/metering-label-rules
          headers:
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
          payload:
            name: validName
            description: This is a valid description.
            labelKey: invalidLabelKey
          expect:
            - notStatusCode: 201
            - hasHeader: Content-Type
            - headerEquals: application/json
            - hasProperty: error
            - hasProperty: message
            - hasProperty: errors
            - hasProperty: errors.labelKey
          think: 500
      - post:
          description: |
            Send a POST request with an invalid "labelValue" field in the payload.
          url: /v2.0/metering/metering-label-rules
          headers:
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
          payload:
            name: validName
            description: This is a valid description.
            labelKey: validLabelKey
            labelValue: invalidLabelValue
          expect:
            - notStatusCode: 201
            - hasHeader: Content-Type
            - headerEquals: application/json
            - hasProperty: error
            - hasProperty: message
            - hasProperty: errors
            - hasProperty: errors.labelValue
          think: 500
