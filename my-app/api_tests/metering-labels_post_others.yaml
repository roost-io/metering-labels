# ********RoostGPT********
# Test generated by RoostGPT for test metering-csv using AI Type Azure Open AI and AI Model roost-gpt4-32k

# Test generated for /v2.0/metering/metering-labels_post for http method type POST in artillery framework
# RoostTestHash=b9a8e69447



# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "metering-labels_post_others.csv"
    fields:
      - "id"
      - "name"
      - "description"
      - "wrongfield"
    skipHeader: true
  environments:
    wrongtarget:
      target: "http://wrongdomain"
      auth:
        mode: "bearer"
        token: "{{$processEnvironment.AUTH_TOKEN}}"

scenarios:
  - name: "Test non-200 responses"
    flow:
      - post:
          # Invalid payload
          url: "/v2.0/metering/metering-labels"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          json:
            id: "{{ id }}"
            name: "{{ wrongfield }}"
            description: "{{ description }}"
          expect:
            - statusCode: 400
          think: 1

      - get:
          # Invalid Auth
          url: "/v2.0/metering/metering-labels"
          headers:
            Authorization: "Bearer invalidtoken"
          expect:
            - statusCode: 401
          think: 1
          
      - post:
          # Invalid URL
          url: "/v2.0/wrong/metering-labels"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            description: "{{ description }}"
          expect:
            - statusCode: 404
          think: 1

      - delete:
          # Unauthorized delete
          url: "/v2.0/metering/metering-labels/{{ id }}"
          headers:
            Authorization: "Bearer invalidtoken"
          expect:
            - statusCode: 401
          think: 1

      - patch:
          # Invalid field in PATCH
          url: "/v2.0/metering/metering-labels/{{ id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          json:
            name: "{{ wrongfield }}"
          expect:
            - statusCode: 400
          think: 1
