{
  "item": [
    {
      "id": "2139b30c-d142-452f-8c2e-9bb85a3cc699",
      "name": "v2.0/metering",
      "item": [
        {
          "id": "624acc8f-f0b7-4e25-9da5-03423bbd19b7",
          "name": "metering-labels",
          "item": [
            {
              "id": "13ce6e51-dc16-4a76-9aad-ff469dc66a96",
              "name": "List metering labels",
              "request": {
                "name": "List metering labels",
                "description": {
                  "content": "Lists all l3 metering labels that belong to the specified tenant.\n",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "v2.0",
                    "metering",
                    "metering-labels"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null
              },
              "response": [
                {
                  "id": "97fd556c-85f7-4ed7-b7e8-27078fd6c436",
                  "name": "200 response",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "v2.0",
                        "metering",
                        "metering-labels"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"{\\n    \\\"metering_labels\\\": [\\n        {\\n            \\\"id\\\": \\\"a6700594-5b7a-4105-8bfe-723b346ce866\\\",\\n            \\\"tenant_id\\\": \\\"45345b0ee1ea477fac0f541b2cb79cd4\\\",\\n            \\\"description\\\": \\\"label1 description\\\",\\n            \\\"name\\\": \\\"label1\\\"\\n        },\\n        {\\n            \\\"id\\\": \\\"e131d186-b02d-4c0b-83d5-0c0725c4f812\\\",\\n            \\\"tenant_id\\\": \\\"45345b0ee1ea477fac0f541b2cb79cd4\\\",\\n            \\\"description\\\": \\\"label2 description\\\",\\n            \\\"name\\\": \\\"label2\\\"\\n        }\\n    ]\\n}\"",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      " \n// ********RoostGPT********\n/*\nTest generated by RoostGPT for test metering-postman using AI Type Vertex AI and AI Model code-bison-32k\n\n\nTest generated for /v2.0/metering/metering-labels for http method type get in postman framework\n\n*/\n\n// ********RoostGPT********\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"200 response\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");});\n}\n"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "86522276-8f43-45c3-a7de-b230ca81a9df",
              "name": "Create metering label",
              "request": {
                "name": "Create metering label",
                "description": {
                  "content": "Creates a l3 metering label.\n",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "v2.0",
                    "metering",
                    "metering-labels"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null
              },
              "response": [
                {
                  "id": "bd8424a4-5ef4-492f-a3be-756bfe0ac720",
                  "name": "201 response",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "v2.0",
                        "metering",
                        "metering-labels"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {}
                  },
                  "status": "Created",
                  "code": 201,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"{\\n    \\\"metering_label\\\": {\\n        \\\"id\\\": \\\"bc91b832-8465-40a7-a5d8-ba87de442266\\\",\\n        \\\"tenant_id\\\": \\\"45345b0ee1ea477fac0f541b2cb79cd4\\\",\\n        \\\"description\\\": \\\"description of label1\\\",\\n        \\\"name\\\": \\\"label1\\\"\\n    }\\n}\"",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      " \n// ********RoostGPT********\n/*\nTest generated by RoostGPT for test metering-postman using AI Type Vertex AI and AI Model code-bison-32k\n\n\nTest generated for /v2.0/metering/metering-labels for http method type post in postman framework\n\n*/\n\n// ********RoostGPT********\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 201){\n    pm.test(\"201 response\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Created\");});\n}\n"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "7cc4cb61-d963-4922-b0a2-06eaeae7aafc",
              "name": "{metering_label_id}",
              "item": [
                {
                  "id": "a709a025-268a-4a45-859d-eaecbb16a39b",
                  "name": "Show metering label",
                  "request": {
                    "name": "Show metering label",
                    "description": {
                      "content": "Shows informations for a specified metering label.\n",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "v2.0",
                        "metering",
                        "metering-labels",
                        ":metering_label_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "{{metering_label_id}}",
                          "key": "metering_label_id",
                          "description": "(Required) The unique identifier of the metering label.\n"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "b2c3fad0-8eb5-4e89-bbd9-212759d17663",
                      "name": "200 response",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v2.0",
                            "metering",
                            "metering-labels",
                            ":metering_label_id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{metering_label_id}}",
                              "key": "metering_label_id",
                              "description": "(Required) The unique identifier of the metering label.\n"
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "\"{\\n    \\\"metering_label\\\": {\\n        \\\"id\\\": \\\"a6700594-5b7a-4105-8bfe-723b346ce866\\\",\\n        \\\"tenant_id\\\": \\\"45345b0ee1ea477fac0f541b2cb79cd4\\\",\\n        \\\"description\\\": \\\"label1 description\\\",\\n        \\\"name\\\": \\\"label1\\\"\\n    }\\n}\"",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          " \n// ********RoostGPT********\n/*\nTest generated by RoostGPT for test metering-postman using AI Type Vertex AI and AI Model code-bison-32k\n\n\nTest generated for /v2.0/metering/metering-labels/:metering_label_id for http method type get in postman framework\n\n*/\n\n// ********RoostGPT********\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"200 response\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");});\n}\n"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "53d69d26-8b14-4b31-bd55-424c7bdefe35",
                  "name": "Delete metering label",
                  "request": {
                    "name": "Delete metering label",
                    "description": {
                      "content": "Deletes a l3 metering label.\n",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "v2.0",
                        "metering",
                        "metering-labels",
                        ":metering_label_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "{{metering_label_id}}",
                          "key": "metering_label_id",
                          "description": "(Required) The unique identifier of the metering label.\n"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "2b6c61a8-89bd-444f-849c-ffbf0d6a727e",
                      "name": "204 response",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v2.0",
                            "metering",
                            "metering-labels",
                            ":metering_label_id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{metering_label_id}}",
                              "key": "metering_label_id",
                              "description": "(Required) The unique identifier of the metering label.\n"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "No Content",
                      "code": 204,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": [],
                      "_postman_previewlanguage": "text"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          " \n// ********RoostGPT********\n/*\nTest generated by RoostGPT for test metering-postman using AI Type Vertex AI and AI Model code-bison-32k\n\n\nTest generated for /v2.0/metering/metering-labels/:metering_label_id for http method type delete in postman framework\n\n*/\n\n// ********RoostGPT********\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 204){\n    pm.test(\"204 response\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"No Content\");});\n}\n"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        {
          "id": "ba7217d7-7962-47f1-966f-d3c80c32d2c9",
          "name": "metering-label-rules",
          "item": [
            {
              "id": "d327342b-2288-4fc8-bb57-e4734fdcfbba",
              "name": "List metering label rules",
              "request": {
                "name": "List metering label rules",
                "description": {
                  "content": "Lists a summary of all l3 metering label rules belonging to the specified tenant.\n",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "v2.0",
                    "metering",
                    "metering-label-rules"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null
              },
              "response": [
                {
                  "id": "0a915340-0be4-4c7e-aa6b-e0fa4a521c32",
                  "name": "200 response",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "v2.0",
                        "metering",
                        "metering-label-rules"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"{\\n    \\\"metering_label_rules\\\": [\\n        {\\n            \\\"remote_ip_prefix\\\": \\\"20.0.0.0/24\\\",\\n            \\\"direction\\\": \\\"ingress\\\",\\n            \\\"metering_label_id\\\": \\\"e131d186-b02d-4c0b-83d5-0c0725c4f812\\\",\\n            \\\"id\\\": \\\"9536641a-7d14-4dc5-afaf-93a973ce0eb8\\\",\\n            \\\"excluded\\\": false\\n        },\\n        {\\n            \\\"remote_ip_prefix\\\": \\\"10.0.0.0/24\\\",\\n            \\\"direction\\\": \\\"ingress\\\",\\n            \\\"metering_label_id\\\": \\\"e131d186-b02d-4c0b-83d5-0c0725c4f812\\\",\\n            \\\"id\\\": \\\"ffc6fd15-40de-4e7d-b617-34d3f7a93aec\\\",\\n            \\\"excluded\\\": false\\n        }\\n    ]\\n}\"",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      " \n// ********RoostGPT********\n/*\nTest generated by RoostGPT for test metering-postman using AI Type Vertex AI and AI Model code-bison-32k\n\n\nTest generated for /v2.0/metering/metering-label-rules for http method type get in postman framework\n\n*/\n\n// ********RoostGPT********\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"200 response\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");});\n}\n"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "59197ce5-7b4c-4d8d-809c-e7770d572bba",
              "name": "Create metering label rule",
              "request": {
                "name": "Create metering label rule",
                "description": {
                  "content": "Creates a l3 metering label rule.\n",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "v2.0",
                    "metering",
                    "metering-label-rules"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null
              },
              "response": [
                {
                  "id": "f4727478-fdc2-4d6d-913a-881ab07818a0",
                  "name": "201 response",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "v2.0",
                        "metering",
                        "metering-label-rules"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {}
                  },
                  "status": "Created",
                  "code": 201,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"{\\n    \\\"metering_label_rule\\\": {\\n        \\\"remote_ip_prefix\\\": \\\"10.0.1.0/24\\\",\\n        \\\"direction\\\": \\\"ingress\\\",\\n        \\\"metering_label_id\\\": \\\"e131d186-b02d-4c0b-83d5-0c0725c4f812\\\",\\n        \\\"id\\\": \\\"00e13b58-b4f2-4579-9c9c-7ac94615f9ae\\\",\\n        \\\"excluded\\\": false\\n    }\\n}\"",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      " \n// ********RoostGPT********\n/*\nTest generated by RoostGPT for test metering-postman using AI Type Vertex AI and AI Model code-bison-32k\n\n\nTest generated for /v2.0/metering/metering-label-rules for http method type post in postman framework\n\n*/\n\n// ********RoostGPT********\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 201){\n    pm.test(\"201 response\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"Created\");});\n}\n"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "78320b7d-39a0-4f3b-894e-6fd7be7613d9",
              "name": "{metering-label-rule-id}",
              "item": [
                {
                  "id": "f07ade40-021e-4c8c-9f48-328b64893c99",
                  "name": "Show metering label rule",
                  "request": {
                    "name": "Show metering label rule",
                    "description": {
                      "content": "Shows detailed informations for a specified metering label rule.\n",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "v2.0",
                        "metering",
                        "metering-label-rules",
                        ":metering-label-rule-id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "{{metering-label-rule-id}}",
                          "key": "metering-label-rule-id",
                          "description": "(Required) The unique identifier of metering label rule.\n"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "a86eea64-c238-46c7-a753-af00e546c2c0",
                      "name": "200 response",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v2.0",
                            "metering",
                            "metering-label-rules",
                            ":metering-label-rule-id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{metering-label-rule-id}}",
                              "key": "metering-label-rule-id",
                              "description": "(Required) The unique identifier of metering label rule.\n"
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "\"{\\n    \\\"metering_label_rule\\\": {\\n        \\\"remote_ip_prefix\\\": \\\"20.0.0.0/24\\\",\\n        \\\"direction\\\": \\\"ingress\\\",\\n        \\\"metering_label_id\\\": \\\"e131d186-b02d-4c0b-83d5-0c0725c4f812\\\",\\n        \\\"id\\\": \\\"9536641a-7d14-4dc5-afaf-93a973ce0eb8\\\",\\n        \\\"excluded\\\": false\\n    }\\n}\"",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          " \n// ********RoostGPT********\n/*\nTest generated by RoostGPT for test metering-postman using AI Type Vertex AI and AI Model code-bison-32k\n\n\nTest generated for /v2.0/metering/metering-label-rules/:metering-label-rule-id for http method type get in postman framework\n\n*/\n\n// ********RoostGPT********\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"200 response\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"OK\");});\n}\n"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "dfc774f2-17f4-4b90-b9aa-22c734f0b18a",
                  "name": "Delete metering label rule",
                  "request": {
                    "name": "Delete metering label rule",
                    "description": {
                      "content": "Deletes a specified l3 metering label rule.\n",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "v2.0",
                        "metering",
                        "metering-label-rules",
                        ":metering-label-rule-id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "{{metering-label-rule-id}}",
                          "key": "metering-label-rule-id",
                          "description": "(Required) The unique identifier of metering label rule.\n"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "67d92795-d70d-4257-848e-164edaddf675",
                      "name": "204 response",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v2.0",
                            "metering",
                            "metering-label-rules",
                            ":metering-label-rule-id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{metering-label-rule-id}}",
                              "key": "metering-label-rule-id",
                              "description": "(Required) The unique identifier of metering label rule.\n"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "No Content",
                      "code": 204,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": [],
                      "_postman_previewlanguage": "text"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          " \n// ********RoostGPT********\n/*\nTest generated by RoostGPT for test metering-postman using AI Type Vertex AI and AI Model code-bison-32k\n\n\nTest generated for /v2.0/metering/metering-label-rules/:metering-label-rule-id for http method type delete in postman framework\n\n*/\n\n// ********RoostGPT********\n\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    responseData = xml2Json(responseBody);\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n  pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 204){\n    pm.test(\"204 response\", function () {\n      pm.expect(pm.response.status).to.be.eql(\"No Content\");});\n}\n"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                }
              ],
              "event": []
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "/",
      "key": "baseUrl"
    },
    {
      "type": "integer",
      "value": 200,
      "key": "statusCode"
    }
  ],
  "info": {
    "_postman_id": "fece166e-bf76-42a9-b4d2-2fa622dcabc9",
    "name": "metering-labels",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}